---
author: Marcobisky
title: "Basic Linux CLI Commands"
description: 基础的 Linux 命令行指令
date: 2025-7-14
# image: point-charge-case.png
categories:
    - CS
format: 
    html: default
---


## 命令的基本组成

```bash
命令 子命令 [选项] [参数] [重定向] [控制符或管道]
Command Subcommand [Options] [Arguments] [Redirection] [Control Characters or Pipes]
```

- 这里面除了命令是必须的, 其它的都是可选的 (就像 Python 的函数参数一样, 不写的话**会有默认值**!).

### 重要例子


```bash
git submodule update --init
```

- `submodule` 和 `update` 是子命令
- `--init` 是选项, 参数默认是更新所有模块. (也可以加参数: `git submodule update --init --recursive third_party/python/pythondata_cpu_serv`.)

```sh
# 如果系统中找不到 wget 命令，就把 wget 加入 missing 数组
missing=()

if ! which wget >/dev/null; then
    missing+=(wget)
fi
```

- `>`: 重定向, 表示把标准输出 (即命令正常的输出) 写到某个地方.
- `/dev/null`: 黑洞设备, 任何写入它的数据都会被系统丢弃.
- 如果 `which wget >/dev/null` 没成功, 则执行 `then` 后面的语句 (即只关心是否存在 `wget` 命令, 不关心它的输出).

```bash
grep "apt" ./scripts/setup
```

- 在 `./scripts/setup` 文件中查找包含 `"apt"` 字符串.

```bash
in_ci=0
if [ $# -gt 0 ] ; then
  if [ $1 == "-ci" ] ; then
    in_ci=1
  fi
fi
```

- `$#`: 表示传递给脚本的参数个数.
- `gt`: 表示大于 (greater than).
- `$1`: 表示第一个参数.

```bash
cat file.txt # 打印文件内容
cat a.txt b.txt > merged.txt # 合并多个文件内容到一个新文件
```

```bash
mkdir -p /path/to/directory # 创建目录, 如果上级目录不存在则创建
```

```bash
# 假设 env.sh 有这个内容: MY_VAR="hello"
bash env.sh
echo "$MY_VAR"   # 空的
source env.sh    # 会在当前 shell 里保留变量
echo "$MY_VAR"   # 输出 hello
```


### 常见选项

- `-h` 或 `--help`: 显示帮助信息
- `-v` 或 `--version`: 显示版本信息
- `-l` 或 `--long`: 显示详细信息
- `-a` 或 `--all`: 显示所有内容，包括隐藏文件
- `-r` 或 `--recursive`: 递归操作
- `-d` 或 `--directory`: 仅显示目录 / 是否存在目录
- `-f` 或 `--force`: 强制执行操作
- `set -e`: 如果有错误就退出 (exit) 脚本
- `-p` 或 `--parents`: 创建目录时如果不存在则会创建.

### 其它

#### Command Substitution 命令替换

```bash
echo "Today is $(date)"
```

- `date` 本身就是命令! 执行的时候将它输出的结果作为字符串替换掉 (placeholder 的感觉).
- 还有一些经常用在命令替换的命令:

```bash
# dirname 纯纯基于字符串 (不管路径是否存在)
dirname /home/user/file.txt   → /home/user
dirname /home/user/           → /home
dirname foo/bar               → foo
dirname foo                   → .
dirname this/path/not/exist   → this/path/not
```

```bash
pwd # 当前工作目录
realpath # 显示当前绝对路径
```
