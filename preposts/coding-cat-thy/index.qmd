---
draft: true
author: Marcobisky
title: CTfP Category Theory for Programmers 程序员的范畴论
description: Updating
date: 2025-8-10
# image: cover.webp
categories:
    - Math
format: 
    html: default
---


## TL;DR

- Whether or not you know about Monoids does change the fact that they are in your code. -- Ben Deane

- The moment you have to dig into the implementation of the object in order to understand how to compose it with other objects, you've lost the advantages of your programming paradigm. -- Bartosz Milewski

## Begin

> No order now.

- 函数式编程语言: Haskell, 
    - Haskell 中类型名要用大写字母开头: `Void`
    - Haskell 中类型变量必须用小写字母开头: `a`


- type 类型是什么: **sets of values**.
    - 空集的类型 (不包括任何值的类型): `Void` (Haskell), `Nothing` (Scala)
        - Type 范畴中的始对象.
    - 单点集的类型 (只包括一个值的类型): `()` (Haskell), `Unit` (Scala)
        - Type 范畴中的终对象.

- 在范畴的世界中, 我们不关心 object 内部的细节, 谈论的语言中只能涉及 object 之间的 morphism.
    - Singleton Set: Set 范畴中的 Terminal object
        - 并不是所有范畴都有 Terminal object! 比如 total ordering 里面.
        - Terminal objects are unique up to isomorphism (而且只有一个 isomorphism).

    - Empty Set: Set 范畴中的 Initial object